/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.sql.*;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static project.Printingview.PrintingView;

/**
 *
 * @author C4
 */
public class Travel extends javax.swing.JFrame {

    double price_Salad = 100;
    double price_Fires = 150;
    double price_Hamburger = 100;
    double price_OnionRings = 70;
    double price_Chickensalad = 150;
    double price_Fishsandwich = 100;
    double price_Chickensandwice = 150;
    double price_Beefsandwice = 250;
    double price_hashBrown = 170;
    double price_ToastedBagol = 325;
    double price_PinapleStic = 120;
    double price_ChocolateMuffin = 180;
    double price_PancakesSyrup = 230;
    double price_Tea = 25;
    double price_Cola = 50;
    double price_Coffe = 100;
    double price_Orange = 120;

    double price_BottleWater = 40;

    double price_SoftDrinks = 70;

    double price_VanilaCone = 170;

    double price_VanilaShake = 150;

    double price_StrawberryShake = 280;
    double price_ChocolateMilkShake = 220;

    double price_CheeseSandwich = 230;
    double Tax_Rate = 15;
    double iTax, iTotal, iSubTotal, iChange, iCost;
    double[] itemcost = new double[24]; //Array  
    double cash = 0;
    double change;

    public Travel() {
        initComponents();
        Calendar();
    }
    
    public void Calendar(){
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        txtSaleDate.setText(+year+"-"+(month+1)+"-"+day);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        scrollPane1 = new java.awt.ScrollPane();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtcos = new javax.swing.JTextField();
        txtSaleDate = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ckfires = new javax.swing.JCheckBox();
        cksalad = new javax.swing.JCheckBox();
        ckhanburger = new javax.swing.JCheckBox();
        ckonion = new javax.swing.JCheckBox();
        ckchiken = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        ckfish = new javax.swing.JCheckBox();
        ckcheese = new javax.swing.JCheckBox();
        ckchik = new javax.swing.JCheckBox();
        ckbeef = new javax.swing.JCheckBox();
        txtsalad = new javax.swing.JTextField();
        txtfires = new javax.swing.JTextField();
        txtham = new javax.swing.JTextField();
        txtoni = new javax.swing.JTextField();
        txtchi = new javax.swing.JTextField();
        txtfis = new javax.swing.JTextField();
        txtchee = new javax.swing.JTextField();
        txtsandw = new javax.swing.JTextField();
        txtbeef = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        chtea = new javax.swing.JCheckBox();
        chcola = new javax.swing.JCheckBox();
        chcofee = new javax.swing.JCheckBox();
        choran = new javax.swing.JCheckBox();
        chbott = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        chvanila = new javax.swing.JCheckBox();
        chshake = new javax.swing.JCheckBox();
        chstraw = new javax.swing.JCheckBox();
        chcholate = new javax.swing.JCheckBox();
        chsoft = new javax.swing.JCheckBox();
        txttea = new javax.swing.JTextField();
        txtcola = new javax.swing.JTextField();
        txtcofee = new javax.swing.JTextField();
        txtorange = new javax.swing.JTextField();
        txtbottle = new javax.swing.JTextField();
        txtsoft = new javax.swing.JTextField();
        txtvanila = new javax.swing.JTextField();
        txtshake = new javax.swing.JTextField();
        txtstraw = new javax.swing.JTextField();
        txtmilk = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txthash = new javax.swing.JCheckBox();
        txttoast = new javax.swing.JCheckBox();
        txtpinaple = new javax.swing.JCheckBox();
        txtchocolate = new javax.swing.JCheckBox();
        txtpancake = new javax.swing.JCheckBox();
        txtbrown = new javax.swing.JTextField();
        txtbagol = new javax.swing.JTextField();
        txtstick = new javax.swing.JTextField();
        txtmuffin = new javax.swing.JTextField();
        txtsyrup = new javax.swing.JTextField();
        lbluser = new javax.swing.JLabel();
        jcash = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jpaymentmethod = new javax.swing.JComboBox<>();
        txtfield = new javax.swing.JTextField();
        total = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtchange = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txttax = new javax.swing.JTextField();
        txtsub = new javax.swing.JTextField();
        txttota = new javax.swing.JTextField();
        btnPrint = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        jTextField1.setText("jTextField1");

        jLabel7.setText("jLabel7");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 144, Short.MAX_VALUE)
        );

        jLabel9.setText("jLabel9");

        jLabel16.setText("jLabel16");

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/perkins-restaurant-half-off-food-and-drinks-19-7913112-regular.jpg"))); // NOI18N
        jLabel18.setText("jLabel18");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setSize(new java.awt.Dimension(1000, 900));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 4));
        jPanel1.setForeground(new java.awt.Color(0, 51, 255));

        jLabel1.setBackground(new java.awt.Color(102, 204, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 70)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Fast Food Resturant");

        jLabel14.setFont(new java.awt.Font("Edwardian Script ITC", 1, 24)); // NOI18N
        jLabel14.setText("Coustomer Name");

        jLabel15.setFont(new java.awt.Font("Edwardian Script ITC", 1, 24)); // NOI18N
        jLabel15.setText("Sale Date");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel1)
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSaleDate, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(txtcos))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtcos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtSaleDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1190, 120));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Lucida Handwriting", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("First Meal and Vegetarian");

        ckfires.setBackground(new java.awt.Color(153, 153, 153));
        ckfires.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckfires.setText("Fires");
        ckfires.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckfiresActionPerformed(evt);
            }
        });

        cksalad.setBackground(new java.awt.Color(153, 153, 153));
        cksalad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cksalad.setText("Salad");
        cksalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cksaladActionPerformed(evt);
            }
        });

        ckhanburger.setBackground(new java.awt.Color(153, 153, 153));
        ckhanburger.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckhanburger.setText("Hamburger");
        ckhanburger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckhanburgerActionPerformed(evt);
            }
        });

        ckonion.setBackground(new java.awt.Color(153, 153, 153));
        ckonion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckonion.setText("Onion Rings");
        ckonion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckonionActionPerformed(evt);
            }
        });

        ckchiken.setBackground(new java.awt.Color(153, 153, 153));
        ckchiken.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckchiken.setText("Chiken Salad");
        ckchiken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckchikenActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Handwriting", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("Sandwich");

        ckfish.setBackground(new java.awt.Color(153, 153, 153));
        ckfish.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckfish.setText("Fish sandwich");
        ckfish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckfishActionPerformed(evt);
            }
        });

        ckcheese.setBackground(new java.awt.Color(153, 153, 153));
        ckcheese.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckcheese.setText("Cheese Sandwich");
        ckcheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckcheeseActionPerformed(evt);
            }
        });

        ckchik.setBackground(new java.awt.Color(153, 153, 153));
        ckchik.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckchik.setText("Chiken Sandwice");
        ckchik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckchikActionPerformed(evt);
            }
        });

        ckbeef.setBackground(new java.awt.Color(153, 153, 153));
        ckbeef.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckbeef.setText("Beef Sandwice");
        ckbeef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbeefActionPerformed(evt);
            }
        });

        txtsalad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsalad.setText("0");
        txtsalad.setEnabled(false);
        txtsalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsaladActionPerformed(evt);
            }
        });
        txtsalad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsaladKeyTyped(evt);
            }
        });

        txtfires.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfires.setText("0");
        txtfires.setEnabled(false);
        txtfires.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfiresActionPerformed(evt);
            }
        });
        txtfires.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfiresKeyTyped(evt);
            }
        });

        txtham.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtham.setText("0");
        txtham.setEnabled(false);
        txtham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txthamKeyTyped(evt);
            }
        });

        txtoni.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtoni.setText("0");
        txtoni.setEnabled(false);
        txtoni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtoniKeyTyped(evt);
            }
        });

        txtchi.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtchi.setText("0");
        txtchi.setEnabled(false);
        txtchi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtchiActionPerformed(evt);
            }
        });
        txtchi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtchiKeyTyped(evt);
            }
        });

        txtfis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfis.setText("0");
        txtfis.setEnabled(false);
        txtfis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfisKeyTyped(evt);
            }
        });

        txtchee.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtchee.setText("0");
        txtchee.setEnabled(false);
        txtchee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcheeKeyTyped(evt);
            }
        });

        txtsandw.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsandw.setText("0");
        txtsandw.setEnabled(false);
        txtsandw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsandwActionPerformed(evt);
            }
        });
        txtsandw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsandwKeyTyped(evt);
            }
        });

        txtbeef.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtbeef.setText("0");
        txtbeef.setEnabled(false);
        txtbeef.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbeefKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ckcheese, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ckfish, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtchee)
                            .addComponent(txtfis)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ckchiken, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ckonion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ckhanburger, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtham, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                            .addComponent(txtoni)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtchi, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ckfires, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cksalad, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                .addGap(54, 54, 54)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtsalad, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(txtfires))))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ckbeef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ckchik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtsandw))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtbeef)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsalad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cksalad))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckfires)
                    .addComponent(txtfires, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckhanburger)
                    .addComponent(txtham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckonion)
                    .addComponent(txtoni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckchiken)
                    .addComponent(txtchi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckfish)
                    .addComponent(txtfis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckcheese)
                    .addComponent(txtchee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckchik)
                    .addComponent(txtsandw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbeef)
                    .addComponent(txtbeef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 340, 590));

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel5.setFont(new java.awt.Font("Lucida Handwriting", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 204));
        jLabel5.setText("Drinks");

        chtea.setBackground(new java.awt.Color(153, 153, 153));
        chtea.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chtea.setText("Tea");
        chtea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chteaActionPerformed(evt);
            }
        });

        chcola.setBackground(new java.awt.Color(153, 153, 153));
        chcola.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chcola.setText("Cola");
        chcola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chcolaActionPerformed(evt);
            }
        });

        chcofee.setBackground(new java.awt.Color(153, 153, 153));
        chcofee.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        chcofee.setText("Coffee");
        chcofee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chcofeeActionPerformed(evt);
            }
        });

        choran.setBackground(new java.awt.Color(153, 153, 153));
        choran.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        choran.setText("Orange");
        choran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choranActionPerformed(evt);
            }
        });

        chbott.setBackground(new java.awt.Color(153, 153, 153));
        chbott.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        chbott.setText("Bottle Water");
        chbott.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbottActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Handwriting", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 204));
        jLabel6.setText("Shakes");

        chvanila.setBackground(new java.awt.Color(153, 153, 153));
        chvanila.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        chvanila.setText("Vanila Cone");
        chvanila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chvanilaActionPerformed(evt);
            }
        });

        chshake.setBackground(new java.awt.Color(153, 153, 153));
        chshake.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        chshake.setText("Vanila Shake");
        chshake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chshakeActionPerformed(evt);
            }
        });

        chstraw.setBackground(new java.awt.Color(153, 153, 153));
        chstraw.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        chstraw.setText("Strawberry Shake");
        chstraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chstrawActionPerformed(evt);
            }
        });

        chcholate.setBackground(new java.awt.Color(153, 153, 153));
        chcholate.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        chcholate.setText("Chocolate Milk Shake");
        chcholate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chcholateActionPerformed(evt);
            }
        });

        chsoft.setBackground(new java.awt.Color(153, 153, 153));
        chsoft.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        chsoft.setText("Soft Drinks");
        chsoft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chsoftActionPerformed(evt);
            }
        });

        txttea.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttea.setText("0");
        txttea.setEnabled(false);
        txttea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtteaKeyTyped(evt);
            }
        });

        txtcola.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcola.setText("0");
        txtcola.setEnabled(false);
        txtcola.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcolaKeyTyped(evt);
            }
        });

        txtcofee.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcofee.setText("0");
        txtcofee.setEnabled(false);
        txtcofee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcofeeKeyTyped(evt);
            }
        });

        txtorange.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtorange.setText("0");
        txtorange.setEnabled(false);
        txtorange.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtorangeKeyTyped(evt);
            }
        });

        txtbottle.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtbottle.setText("0");
        txtbottle.setEnabled(false);
        txtbottle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbottleKeyTyped(evt);
            }
        });

        txtsoft.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsoft.setText("0");
        txtsoft.setEnabled(false);
        txtsoft.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsoftKeyTyped(evt);
            }
        });

        txtvanila.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtvanila.setText("0");
        txtvanila.setEnabled(false);
        txtvanila.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtvanilaKeyTyped(evt);
            }
        });

        txtshake.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtshake.setText("0");
        txtshake.setEnabled(false);
        txtshake.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtshakeKeyTyped(evt);
            }
        });

        txtstraw.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtstraw.setText("0");
        txtstraw.setEnabled(false);
        txtstraw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtstrawKeyTyped(evt);
            }
        });

        txtmilk.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtmilk.setText("0");
        txtmilk.setEnabled(false);
        txtmilk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmilkKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chstraw)
                                            .addComponent(chshake)
                                            .addComponent(chvanila))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtstraw, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtshake, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtvanila, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(chcholate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtmilk))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chsoft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chbott, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtbottle)
                                    .addComponent(txtsoft)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chcola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chcofee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chtea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(choran, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txttea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(txtcofee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(txtorange, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtcola, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chtea)
                    .addComponent(txttea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chcola)
                    .addComponent(txtcola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chcofee)
                    .addComponent(txtcofee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choran)
                    .addComponent(txtorange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbott)
                    .addComponent(txtbottle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsoft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chsoft))
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chvanila)
                    .addComponent(txtvanila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chshake)
                    .addComponent(txtshake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chstraw)
                    .addComponent(txtstraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chcholate)
                    .addComponent(txtmilk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 150, 310, 590));

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel4.setFont(new java.awt.Font("Lucida Handwriting", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Desserts");

        txthash.setBackground(new java.awt.Color(153, 153, 153));
        txthash.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        txthash.setText("Hash Brown");
        txthash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthashActionPerformed(evt);
            }
        });

        txttoast.setBackground(new java.awt.Color(153, 153, 153));
        txttoast.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        txttoast.setText("Toasted Bagol");
        txttoast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttoastActionPerformed(evt);
            }
        });

        txtpinaple.setBackground(new java.awt.Color(153, 153, 153));
        txtpinaple.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        txtpinaple.setText("Pinaple Stic");
        txtpinaple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpinapleActionPerformed(evt);
            }
        });

        txtchocolate.setBackground(new java.awt.Color(153, 153, 153));
        txtchocolate.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        txtchocolate.setText("Chocolate Muffin");
        txtchocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtchocolateActionPerformed(evt);
            }
        });

        txtpancake.setBackground(new java.awt.Color(153, 153, 153));
        txtpancake.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        txtpancake.setText("Pancakes-Syrup");
        txtpancake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpancakeActionPerformed(evt);
            }
        });

        txtbrown.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtbrown.setText("0");
        txtbrown.setEnabled(false);
        txtbrown.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbrownKeyTyped(evt);
            }
        });

        txtbagol.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtbagol.setText("0");
        txtbagol.setEnabled(false);
        txtbagol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbagolKeyTyped(evt);
            }
        });

        txtstick.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtstick.setText("0");
        txtstick.setEnabled(false);
        txtstick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtstickKeyTyped(evt);
            }
        });

        txtmuffin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtmuffin.setText("0");
        txtmuffin.setEnabled(false);
        txtmuffin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmuffinKeyTyped(evt);
            }
        });

        txtsyrup.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsyrup.setText("0");
        txtsyrup.setEnabled(false);
        txtsyrup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsyrupKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtchocolate, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtpinaple, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txttoast, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txthash, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtpancake, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtbagol, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                    .addComponent(lbluser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtsyrup, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmuffin, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtstick, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtbrown, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lbluser, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txthash, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttoast, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbrown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtbagol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtstick, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpinaple, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtmuffin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtchocolate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpancake)
                    .addComponent(txtsyrup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, 520, 280));

        jcash.setBackground(new java.awt.Color(0, 153, 153));
        jcash.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jcash.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Lucida Handwriting", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("Payment Method");
        jcash.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jpaymentmethod.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jpaymentmethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Cradit Card", "Devid Card", "Master card" }));
        jpaymentmethod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jpaymentmethodKeyTyped(evt);
            }
        });
        jcash.add(jpaymentmethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 110, -1));

        txtfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfield.setText("0");
        txtfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfieldKeyTyped(evt);
            }
        });
        jcash.add(txtfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 110, -1));

        total.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/if_Toy_669956.png"))); // NOI18N
        total.setText("Total");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totalKeyTyped(evt);
            }
        });
        jcash.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 120, 40));

        reset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 102, 102));
        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/if_kde-add-folder-to-archive_23424.png"))); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        reset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                resetKeyTyped(evt);
            }
        });
        jcash.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 120, 40));

        exit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 51, 51));
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/if_exit_3226.png"))); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        exit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                exitKeyTyped(evt);
            }
        });
        jcash.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, 110, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Change");
        jcash.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, -1));

        txtchange.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtchange.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtchangeKeyTyped(evt);
            }
        });
        jcash.add(txtchange, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 110, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Tax");
        jcash.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Sub Total");
        jcash.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Total");
        jcash.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, -1, -1));

        txttax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttaxKeyTyped(evt);
            }
        });
        jcash.add(txttax, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 110, -1));

        txtsub.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsubKeyTyped(evt);
            }
        });
        jcash.add(txtsub, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 110, -1));

        txttota.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txttota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotaActionPerformed(evt);
            }
        });
        txttota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttotaKeyTyped(evt);
            }
        });
        jcash.add(txttota, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 120, -1));

        btnPrint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/if_printer_49729.png"))); // NOI18N
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jcash.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 120, 40));

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/if_Apple_132050.png"))); // NOI18N
        jButton4.setText("Monthly");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/if_Apple_132050.png"))); // NOI18N
        jButton2.setText("Dayli");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jcash.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 130, 120));

        getContentPane().add(jcash, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 440, 520, 300));

        setSize(new java.awt.Dimension(1232, 791));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cksaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cksaladActionPerformed
        // TODO add your handling code here:
        if (cksalad.isSelected()) {
            txtsalad.setEnabled(true);
            //txtsalad.setText("");
        } else {

            txtsalad.setEnabled(false);
            //txtsalad.setText("0");
        }
    }//GEN-LAST:event_cksaladActionPerformed

    private void ckcheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckcheeseActionPerformed
        // TODO add your handling code here:
        if (ckcheese.isSelected()) {
            txtchee.setEnabled(true);
        } else {

            txtchee.setEnabled(false);
        }
    }//GEN-LAST:event_ckcheeseActionPerformed
    private JFrame frame;
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed

        frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "confirm if you want to exit", "Fast Food",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
            System.exit(0);

        }
    }//GEN-LAST:event_exitActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        txtsalad.setText("0");
        txtfires.setText("0");
        txtham.setText("0");
        txtoni.setText("0");
        txtchi.setText("0");
        txtfis.setText("0");
        txtchee.setText("0");
        txtsandw.setText("0");
        txtbeef.setText("0");
        txtbagol.setText("0");
        txtbrown.setText("0");
        txtstick.setText("0");
        txtmuffin.setText("0");
        txtsyrup.setText("0");
        txtfield.setText("0");
        txtchange.setText("0");
        txttax.setText("0");
        txtsub.setText("0");
        txttota.setText("0");
        txttea.setText("0");
        txtcola.setText("0");
        txtcofee.setText("0");
        txtorange.setText("0");
        txtbottle.setText("0");
        txtsoft.setText("0");
        txtvanila.setText("0");
        txtshake.setText("0");
        txtstraw.setText("0");
        txtmilk.setText("0");
        txtchange.setText("0");
        txttax.setText("0");
        txtsub.setText("0");
        txttota.setText("0");

        cksalad.setSelected(false);
        ckfires.setSelected(false);
        ckhanburger.setSelected(false);
        ckonion.setSelected(false);
        ckchiken.setSelected(false);
        ckfish.setSelected(false);
        ckcheese.setSelected(false);
        ckchik.setSelected(false);
        ckbeef.setSelected(false);
        txthash.setSelected(false);
        txttoast.setSelected(false);
        txtpinaple.setSelected(false);
        txtchocolate.setSelected(false);
        txtpancake.setSelected(false);
        chtea.setSelected(false);
        chcola.setSelected(false);
        chcofee.setSelected(false);
        choran.setSelected(false);
        chbott.setSelected(false);
        chsoft.setSelected(false);
        chvanila.setSelected(false);
        chshake.setSelected(false);
        chstraw.setSelected(false);
        chcholate.setSelected(false);
    }//GEN-LAST:event_resetActionPerformed

    private void txtsaladKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsaladKeyTyped
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtsaladKeyTyped

    private void txtfiresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfiresKeyTyped
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtfiresKeyTyped

    private void txthamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthamKeyTyped
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txthamKeyTyped

    private void txtoniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtoniKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtoniKeyTyped

    private void txtchiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchiKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtchiKeyTyped

    private void txtfisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfisKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtfisKeyTyped

    private void txtcheeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcheeKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtcheeKeyTyped

    private void txtsandwKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsandwKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtsandwKeyTyped

    private void txtbeefKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbeefKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtbeefKeyTyped

    private void txtbagolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbagolKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtbagolKeyTyped

    private void txtbrownKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbrownKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtbrownKeyTyped

    private void txtstickKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtstickKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtstickKeyTyped

    private void txtmuffinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmuffinKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtmuffinKeyTyped

    private void txtsyrupKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsyrupKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtsyrupKeyTyped

    private void txtchangeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchangeKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtchangeKeyTyped

    private void txttaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttaxKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txttaxKeyTyped

    private void txtsubKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsubKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtsubKeyTyped

    private void txttotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttotaKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txttotaKeyTyped

    private void jpaymentmethodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpaymentmethodKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_jpaymentmethodKeyTyped

    private void txtfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfieldKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtfieldKeyTyped

    private void totalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_totalKeyTyped

    private void resetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resetKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_resetKeyTyped

    private void exitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exitKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_exitKeyTyped

    private void txtteaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtteaKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtteaKeyTyped

    private void txtcolaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcolaKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtcolaKeyTyped

    private void txtcofeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcofeeKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtcofeeKeyTyped

    private void txtorangeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtorangeKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtorangeKeyTyped

    private void txtbottleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbottleKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtbottleKeyTyped

    private void txtsoftKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsoftKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtsoftKeyTyped

    private void txtvanilaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtvanilaKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtvanilaKeyTyped

    private void txtshakeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtshakeKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtshakeKeyTyped

    private void txtstrawKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtstrawKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtstrawKeyTyped

    private void txtmilkKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmilkKeyTyped
        // TODO add your handling code here:
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
                || (iNumber == KeyEvent.VK_BACK_SPACE)
                || (iNumber == KeyEvent.VK_DELETE)) {
            evt.consume();

        }

    }//GEN-LAST:event_txtmilkKeyTyped

    private void ckfiresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckfiresActionPerformed
        if (ckfires.isSelected()) {
            txtfires.setEnabled(true);
        } else {

            txtfires.setEnabled(false);
        }
    }//GEN-LAST:event_ckfiresActionPerformed

    private void txtsaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsaladActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsaladActionPerformed

    private void txtfiresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfiresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfiresActionPerformed

    private void ckhanburgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckhanburgerActionPerformed
        if (ckhanburger.isSelected()) {
            txtham.setEnabled(true);
        } else {

            txtham.setEnabled(false);
        }
    }//GEN-LAST:event_ckhanburgerActionPerformed

    private void ckonionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckonionActionPerformed
        if (ckonion.isSelected()) {
            txtoni.setEnabled(true);
        } else {

            txtoni.setEnabled(false);
        }
    }//GEN-LAST:event_ckonionActionPerformed

    private void ckchikenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckchikenActionPerformed
        // TODO add your handling code here:
        if (ckchiken.isSelected()) {
            txtchi.setEnabled(true);
        } else {

            txtchi.setEnabled(false);
        }
    }//GEN-LAST:event_ckchikenActionPerformed

    private void ckfishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckfishActionPerformed
        if (ckfish.isSelected()) {
            txtfis.setEnabled(true);
        } else {

            txtfis.setEnabled(false);
        }
    }//GEN-LAST:event_ckfishActionPerformed

    private void ckchikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckchikActionPerformed
        // TODO add your handling code here:
        if (ckchik.isSelected()) {
            txtsandw.setEnabled(true);
        } else {

            txtsandw.setEnabled(false);
        }
    }//GEN-LAST:event_ckchikActionPerformed

    private void txtsandwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsandwActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsandwActionPerformed

    private void ckbeefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbeefActionPerformed
        // TODO add your handling code here:
        if (ckbeef.isSelected()) {
            txtbeef.setEnabled(true);
        } else {

            txtbeef.setEnabled(false);
        }
    }//GEN-LAST:event_ckbeefActionPerformed

    private void txthashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthashActionPerformed
        // TODO add your handling code here:
        if (txthash.isSelected()) {
            txtbagol.setEnabled(true);
        } else {

            txtbagol.setEnabled(false);
        }

    }//GEN-LAST:event_txthashActionPerformed

    private void txttoastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttoastActionPerformed
        // TODO add your handling code here:
        if (txttoast.isSelected()) {
            txtbrown.setEnabled(true);
        } else {

            txtbrown.setEnabled(false);
        }
    }//GEN-LAST:event_txttoastActionPerformed

    private void txtpinapleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpinapleActionPerformed
        // TODO add your handling code here:
        if (txtpinaple.isSelected()) {
            txtstick.setEnabled(true);
        } else {

            txtstick.setEnabled(false);
        }
    }//GEN-LAST:event_txtpinapleActionPerformed

    private void txtchocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtchocolateActionPerformed
        // TODO add your handling code here:
        if (txtchocolate.isSelected()) {
            txtmuffin.setEnabled(true);
        } else {

            txtmuffin.setEnabled(false);
        }
    }//GEN-LAST:event_txtchocolateActionPerformed

    private void txtpancakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpancakeActionPerformed
        // TODO add your handling code here:
        if (txtpancake.isSelected()) {
            txtsyrup.setEnabled(true);
        } else {

            txtsyrup.setEnabled(false);
        }
    }//GEN-LAST:event_txtpancakeActionPerformed

    private void chteaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chteaActionPerformed
        // TODO add your handling code here:
        if (chtea.isSelected()) {
            txttea.setEnabled(true);
        } else {

            txttea.setEnabled(false);
        }
    }//GEN-LAST:event_chteaActionPerformed

    private void chcolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chcolaActionPerformed
        // TODO add your handling code here:
        if (chcola.isSelected()) {
            txtcola.setEnabled(true);
        } else {

            txtcola.setEnabled(false);
        }
    }//GEN-LAST:event_chcolaActionPerformed

    private void chcofeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chcofeeActionPerformed
        // TODO add your handling code here:
        if (chcofee.isSelected()) {
            txtcofee.setEnabled(true);
        } else {

            txtcofee.setEnabled(false);
        }
    }//GEN-LAST:event_chcofeeActionPerformed

    private void choranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choranActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (choran.isSelected()) {
            txtorange.setEnabled(true);
        } else {

            txtorange.setEnabled(false);
        }
    }//GEN-LAST:event_choranActionPerformed

    private void chbottActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbottActionPerformed
        // TODO add your handling code here:
        if (chbott.isSelected()) {
            txtbottle.setEnabled(true);
        } else {

            txtbottle.setEnabled(false);
        }
    }//GEN-LAST:event_chbottActionPerformed

    private void chsoftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chsoftActionPerformed
        // TODO add your handling code here:
        if (chsoft.isSelected()) {
            txtsoft.setEnabled(true);
        } else {

            txtsoft.setEnabled(false);
        }
    }//GEN-LAST:event_chsoftActionPerformed

    private void chvanilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chvanilaActionPerformed
        // TODO add your handling code here:
        if (chvanila.isSelected()) {
            txtvanila.setEnabled(true);
        } else {

            txtvanila.setEnabled(false);
        }
    }//GEN-LAST:event_chvanilaActionPerformed

    private void chshakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chshakeActionPerformed
        // TODO add your handling code here:
        if (chshake.isSelected()) {
            txtshake.setEnabled(true);
        } else {

            txtshake.setEnabled(false);
        }
    }//GEN-LAST:event_chshakeActionPerformed

    private void chstrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chstrawActionPerformed
        // TODO add your handling code here:
        if (chstraw.isSelected()) {
            txtstraw.setEnabled(true);
        } else {

            txtstraw.setEnabled(false);
        }
    }//GEN-LAST:event_chstrawActionPerformed

    private void chcholateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chcholateActionPerformed
        // TODO add your handling code here:
        if (chcholate.isSelected()) {
            txtmilk.setEnabled(true);
        } else {

            txtmilk.setEnabled(false);
        }
    }//GEN-LAST:event_chcholateActionPerformed

    private void txtchiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtchiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtchiActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed

        itemcost[0] = Double.parseDouble(txtsalad.getText()) * price_Salad;
        itemcost[1] = Double.parseDouble(txtfires.getText()) * price_Fires;
        itemcost[2] = Double.parseDouble(txtham.getText()) * price_Hamburger;
        itemcost[3] = Double.parseDouble(txtoni.getText()) * price_OnionRings;
        itemcost[4] = Double.parseDouble(txtchi.getText()) * price_Chickensalad;
        itemcost[5] = Double.parseDouble(txtfis.getText()) * price_Fishsandwich;
        itemcost[6] = Double.parseDouble(txtchee.getText()) * price_Chickensandwice;
        itemcost[7] = Double.parseDouble(txtsandw.getText()) * price_Beefsandwice;
        itemcost[8] = Double.parseDouble(txtbeef.getText()) * price_hashBrown;
        itemcost[9] = Double.parseDouble(txtbagol.getText()) * price_ToastedBagol;
        itemcost[10] = Double.parseDouble(txtbrown.getText()) * price_PinapleStic;
        itemcost[11] = Double.parseDouble(txtstick.getText()) * price_ChocolateMuffin;
        itemcost[12] = Double.parseDouble(txtmuffin.getText()) * price_PancakesSyrup;
        itemcost[13] = Double.parseDouble(txtsyrup.getText()) * price_Tea;
        itemcost[14] = Double.parseDouble(txttea.getText()) * price_Cola;
        itemcost[15] = Double.parseDouble(txtcola.getText()) * price_Coffe;
        itemcost[16] = Double.parseDouble(txtcofee.getText()) * price_Orange;
        itemcost[17] = Double.parseDouble(txtorange.getText()) * price_BottleWater;
        itemcost[18] = Double.parseDouble(txtbottle.getText()) * price_SoftDrinks;
        itemcost[19] = Double.parseDouble(txtsoft.getText()) * price_VanilaCone;
        itemcost[20] = Double.parseDouble(txtvanila.getText()) * price_VanilaShake;
        itemcost[21] = Double.parseDouble(txtshake.getText()) * price_StrawberryShake;
        itemcost[22] = Double.parseDouble(txtstraw.getText()) * price_ChocolateMilkShake;
        itemcost[23] = Double.parseDouble(txtmilk.getText()) * price_CheeseSandwich;

        String paymentMethod = (String) jpaymentmethod.getSelectedItem();
        if (paymentMethod == "Cash") {
            iSubTotal = itemcost[0] + itemcost[1] + itemcost[2] + itemcost[3] + itemcost[4] + itemcost[5]
                    + itemcost[6] + itemcost[7] + itemcost[8] + itemcost[9]
                    + itemcost[10] + itemcost[11] + itemcost[12] + itemcost[13] + itemcost[14]
                    + itemcost[15] + itemcost[15] + itemcost[17] + itemcost[18]
                    + itemcost[19] + itemcost[20] + itemcost[21] + itemcost[22] + itemcost[23];
            iTax = (iSubTotal * Tax_Rate) / 100;
            txttax.setText(iTax + "");

            txtsub.setText(iSubTotal + "");
            iTotal = iSubTotal + iTax;
            txttota.setText(iTotal + "");
            cash = Double.parseDouble(txtfield.getText());
            change = cash - iTotal;
            txtchange.setText(change + "");
        } else {
            iSubTotal = itemcost[0] + itemcost[1] + itemcost[2] + itemcost[3] + itemcost[4] + itemcost[5]
                    + itemcost[6] + itemcost[7] + itemcost[8] + itemcost[9]
                    + itemcost[10] + itemcost[11] + itemcost[12] + itemcost[13] + itemcost[14]
                    + itemcost[15] + itemcost[15] + itemcost[17] + itemcost[18]
                    + itemcost[19] + itemcost[20] + itemcost[21] + itemcost[22] + itemcost[23];
            iTax = (iSubTotal * Tax_Rate) / 100;
            txttax.setText(iTax + "");

            txtsub.setText(iSubTotal + "");
            iTotal = iSubTotal + iTax;
            txttota.setText(iTotal + "");
        }
        String c, ch, tax, t, d, n, sub;
        c = jpaymentmethod.getSelectedItem().toString();
        ch = txtchange.getText();
        tax = txttax.getText();
        t = txttota.getText();
        n = txtcos.getText();
        d = txtSaleDate.getText();

        sub = txtsub.getText();
        System.out.println(iSubTotal);
        Connection con = null;
        Statement st = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fastfood", "root", "123");
            st = con.createStatement();
            int count = 0;
            String sql = "insert into details (cash, Change_amt,  Tax, Total, Cos_Name, Sub_total,Date) values('" + c + "','" + ch + "','" + tax + "','" + t + "','"  + n + "','" + sub + "','"+ d +"')";
            System.out.println(sql);
            count = st.executeUpdate(sql);

            if (count > 0) {
                JOptionPane.showMessageDialog(this, "Insert success");

            } else {
                JOptionPane.showMessageDialog(this, "insert fail");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                st.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        double shat = Double.parseDouble(txtfield.getText());
        if (shat < iTotal) {
            JOptionPane.showMessageDialog(rootPane, "Not Enough Money ");
        } else {
        }
    }//GEN-LAST:event_totalActionPerformed


    private void txttotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Accounts a=new Accounts();
      a.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed

        Printingview p=new Printingview();
        p.setVisible(true);
        this.dispose();
        //Printingview pv = new Printingview();



       // PrinterJob job = PrinterJob.getPrinterJob();

        //PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();

        //job.setJobName("Print Data");
       // job.setPrintable(new Printable() {

            //@Override
           /// public int print(Graphics pg, PageFormat pf, int pageNum) throws PrinterException {

               // if (pageNum > 0) {
                   // return Printable.NO_SUCH_PAGE;
               // }
               // Graphics2D g2 = (Graphics2D) pg;
               // g2.translate(pf.getImageableX(), pf.getImageableY());
                //g2.scale(0.8, 0.8);
//                pv.jPanel2.paint(g2);
               // pv.PrintingView.paint(g2);
                //return Printable.PAGE_EXISTS;
           // }

       // });

       // boolean ok = job.printDialog(aset);
       //if (ok) {
            //try {
               // job.print();
            //} catch (PrinterException e) {
           // }

    //}       Printingview pv=new Printingview();
//        pv.setVisible(true);
//        this.dispose();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Monthly m=new Monthly();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    //private void total() {
    // a = Double.parseDouble(txtsalad.getText());
    //b = Double.parseDouble(txtfires.getText());
    // c = Double.parseDouble(txtham.getText());
    //d = Double.parseDouble(txtoni.getText());
    //e = Double.parseDouble(txtchi.getText());
    // f = Double.parseDouble(txtfis.getText());
    // g = Double.parseDouble(txtchee.getText());
    // h = Double.parseDouble(txtsandw.getText());
    // i = Double.parseDouble(txtbeef.getText());
    //j = Double.parseDouble(txtbagol.getText());
    // k = Double.parseDouble(txtbrown.getText());
    //l = Double.parseDouble(txtstick.getText());
//        m = Double.parseDouble(txtmuffin.getText());
//        n = Double.parseDouble(txtsyrup.getText());
//        o = Double.parseDouble(txttea.getText());
//        p = Double.parseDouble(txtcola.getText());
//        q = Double.parseDouble(txtcofee.getText());
//        r = Double.parseDouble(txtorange.getText());
//        s = Double.parseDouble(txtbottle.getText());
//        t = Double.parseDouble(txtsoft.getText());
//        u = Double.parseDouble(txtvanila.getText());
//        v = Double.parseDouble(txtshake.getText());
//        w = Double.parseDouble(txtstraw.getText());
//         x=Double.parseDouble(txtmilk.getText());
    ///subtota = a + b + c + d + e + f ;
    //tax = Double.parseDouble(txttax.getText());
    //tot = subtota + subtota * tax / 100;
    //txtsub.setText(Double.toString(subtota));
    // txttota.setText(Double.toString(tot));
    // }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Travel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Travel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Travel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Travel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Travel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrint;
    private javax.swing.JCheckBox chbott;
    private javax.swing.JCheckBox chcholate;
    private javax.swing.JCheckBox chcofee;
    private javax.swing.JCheckBox chcola;
    private javax.swing.JCheckBox choran;
    private javax.swing.JCheckBox chshake;
    private javax.swing.JCheckBox chsoft;
    private javax.swing.JCheckBox chstraw;
    private javax.swing.JCheckBox chtea;
    private javax.swing.JCheckBox chvanila;
    private javax.swing.JCheckBox ckbeef;
    private javax.swing.JCheckBox ckcheese;
    private javax.swing.JCheckBox ckchik;
    private javax.swing.JCheckBox ckchiken;
    private javax.swing.JCheckBox ckfires;
    private javax.swing.JCheckBox ckfish;
    private javax.swing.JCheckBox ckhanburger;
    private javax.swing.JCheckBox ckonion;
    private javax.swing.JCheckBox cksalad;
    private javax.swing.JButton exit;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel jcash;
    private javax.swing.JComboBox<String> jpaymentmethod;
    public javax.swing.JLabel lbluser;
    private javax.swing.JButton reset;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JButton total;
    private javax.swing.JTextField txtSaleDate;
    private javax.swing.JTextField txtbagol;
    private javax.swing.JTextField txtbeef;
    private javax.swing.JTextField txtbottle;
    private javax.swing.JTextField txtbrown;
    private javax.swing.JTextField txtchange;
    private javax.swing.JTextField txtchee;
    private javax.swing.JTextField txtchi;
    private javax.swing.JCheckBox txtchocolate;
    private javax.swing.JTextField txtcofee;
    private javax.swing.JTextField txtcola;
    private javax.swing.JTextField txtcos;
    private javax.swing.JTextField txtfield;
    private javax.swing.JTextField txtfires;
    private javax.swing.JTextField txtfis;
    private javax.swing.JTextField txtham;
    private javax.swing.JCheckBox txthash;
    private javax.swing.JTextField txtmilk;
    private javax.swing.JTextField txtmuffin;
    private javax.swing.JTextField txtoni;
    private javax.swing.JTextField txtorange;
    private javax.swing.JCheckBox txtpancake;
    private javax.swing.JCheckBox txtpinaple;
    private javax.swing.JTextField txtsalad;
    private javax.swing.JTextField txtsandw;
    private javax.swing.JTextField txtshake;
    private javax.swing.JTextField txtsoft;
    private javax.swing.JTextField txtstick;
    private javax.swing.JTextField txtstraw;
    private javax.swing.JTextField txtsub;
    private javax.swing.JTextField txtsyrup;
    private javax.swing.JTextField txttax;
    private javax.swing.JTextField txttea;
    private javax.swing.JCheckBox txttoast;
    private javax.swing.JTextField txttota;
    private javax.swing.JTextField txtvanila;
    // End of variables declaration//GEN-END:variables

    private String toString(double d) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
